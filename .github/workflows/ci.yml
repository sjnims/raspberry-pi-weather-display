name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      OWM_API_KEY: ${{ secrets.OWM_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ─────────────────────────────────────────────
      # SVG build toolchain (Inkscape + xmlstarlet + Python)
      # ─────────────────────────────────────────────
      - name: Install Inkscape & xmlstarlet
        run: |
          sudo apt-get update
          sudo apt-get install -y inkscape xmlstarlet


      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pip install poetry==1.8.2

      - name: Install deps (prod + dev)
        run: |
          poetry install --with dev

      - name: Build icons (trim → color-fix → sprite)
        run: |
          bash deploy/scripts/trim_svgs.sh
          bash deploy/scripts/fix_svg_color.sh
          python3 deploy/scripts/build_sprite.py

      - name: Ruff lint
        run: poetry run ruff check .

      - name: Pyright type-check
        run: poetry run pyright

      - name: Use sample config in CI
        run: cp config-sample.yaml config.yaml

      - name: Run full test suite
        run: poetry run pytest -q

      - name: Run tests
        run: pytest --cov --cov-branch --cov-report=xml

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}